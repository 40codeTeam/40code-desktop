(window.webpackJsonpGUI=window.webpackJsonpGUI||[]).push([[18],{1815:function(t,e,s){"use strict";s.r(e),s.d(e,"resources",(function(){return a}));const a={"userscript.js":async function(t){let{addon:e,console:s,msg:a,safeMsg:o}=t;const r=await e.tab.traps.getBlockly(),n=e.tab.traps.vm;let i=!1;const l=t=>{const e=t.findIndex((t=>"CREATE_LIST"===t.getAttribute("callbackkey")||"data_addtolist"===t.getAttribute("type")));return{variables:t.slice(0,e),lists:t.slice(e,t.length)}},c=r.DataCategory;let g,u;const p=t=>{let s=c(t);if(!e.self.disabled&&e.settings.get("moveReportersDown")&&(s=(t=>{const{variables:e,lists:s}=l(t),a=t=>{const e=[],s=[];for(const a of t)a.hasAttribute("id")||"BUTTON"===a.tagName?e.push(a):s.push(a);return s.length&&s[s.length-1].setAttribute("gap",24),s.concat(e)};return a(e).concat(a(s))})(s)),!e.self.disabled&&e.settings.get("separateLocalVariables")&&(s=((t,e)=>{const{variables:s,lists:o}=l(e),r=t=>{const e=document.createElement("label");return e.setAttribute("text",a(t)),e},n=t=>{if(t.length>0){for(var e=0;e<t.length-1;e++)t[e].setAttribute("gap",8);t[e].setAttribute("gap",24)}},i=e=>{const s=[],a=[],o=[],i=[];for(const r of e)if(r.hasAttribute("id")){const e=r.getAttribute("id"),s=t.getVariableById(e);s&&s.isLocal?o.push(r):a.push(r)}else a.length||o.length?i.push(r):s.push(r);const l=s;return a.length&&(l.push(r("for-all-sprites")),n(a),l.push(...a)),o.length&&(l.push(r("for-this-sprite-only")),n(o),l.push(...o)),l.concat(i)};return i(s).concat(i(o))})(t,s)),e.self.disabled||!i)return s;const{variables:o,lists:r}=l(s);return g=o,u=r,g},d=()=>u,b=r.Flyout.prototype.show;r.Flyout.prototype.show=function(t){return this.workspace_.registerToolboxCategoryCallback("VARIABLE",p),this.workspace_.registerToolboxCategoryCallback("LIST",d),b.call(this,t)};const h=n.runtime.getBlocksXML;n.runtime.getBlocksXML=function(t){const s=h.call(this,t);return i=e.settings.get("separateListCategory"),!e.self.disabled&&i&&(s.push({id:"data",xml:'\n        <category\n          name="%{BKY_CATEGORY_VARIABLES}"\n          id="variables"\n          colour="'.concat(r.Colours.data.primary,'"\n          secondaryColour="').concat(r.Colours.data.tertiary,'"\n          custom="VARIABLE">\n        </category>\n        <category\n          name="').concat(o("list-category"),'"\n          id="lists"\n          colour="').concat(r.Colours.data_lists.primary,'"\n          secondaryColour="').concat(r.Colours.data_lists.tertiary,'"\n          custom="LIST">\n        </category>')}),s.map=t=>Array.prototype.map.call(s,(e=>"data"===e.id?e:t(e)))),s},n.editingTarget&&n.emitWorkspaceUpdate(),e.settings.addEventListener("change",(t=>{if(e.settings.get("separateListCategory")!==i)n.editingTarget&&n.emitWorkspaceUpdate();else{const t=Blockly.getMainWorkspace();t&&t.refreshToolboxSelection_()}}));const y=()=>{if(e.settings.get("separateListCategory")&&n.editingTarget&&n.emitWorkspaceUpdate(),e.settings.get("separateLocalVariables")||e.settings.get("moveReportersDown")){const t=Blockly.getMainWorkspace();t&&t.refreshToolboxSelection_()}};e.self.addEventListener("disabled",(()=>{y()})),e.self.addEventListener("reenabled",(()=>{y()}))}}}}]);